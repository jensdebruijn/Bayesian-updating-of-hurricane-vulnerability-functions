import re
from collections import Counter
import pandas as pd
from osgeo import gdal


class GetWindSpeed:
    def __init__(self):
        self.ds = gdal.Open('max_wind_field.tif')
        self.gt = self.ds.GetGeoTransform()
        self.rb = self.ds.GetRasterBand(1)

    def get_px_py(self, mx, my):
        px = int((mx - self.gt[0]) / self.gt[1]) #x pixel
        py = int((my - self.gt[3]) / self.gt[5]) #y pixel
        return px, py

    def __call__(self, lon, lat):
        px, py = self.get_px_py(lon, lat)
        return self.rb.ReadAsArray(px, py, 1, 1)[0][0] * 3.6

obs = pd.read_excel(f'building_images_individual_labelled.xlsx', thousands='.')
area = pd.read_excel(f'building_images_area_labelled.xlsx', thousands='.')
for i, damage_area in area.iterrows():
    for damage_observations in damage_area['DAMAGE'].split(','):
        damage = re.findall(r'([0-9]+)([A-Z])([0-9]+)', damage_observations)[0]
        n = int(damage[0])
        damage = {
            'DAMAGE': int(damage[2]) / 100,
            'BUILDING_CLASS': damage[1],
            'LONGITUDE': damage_area['LONGITUDE'],
            'LATITUDE': damage_area['LATITUDE'],
        }
        for _ in range(n):
            obs = obs.append(damage, ignore_index=True)

obs = obs.dropna(subset=['DAMAGE', 'BUILDING_CLASS'])

get_wind_speed = GetWindSpeed()
obs['WIND_SPEED'] = obs.apply(lambda x: get_wind_speed(x.LONGITUDE, x.LATITUDE), axis=1)

rename = {
    'G': 'good',
    'M': 'medium',
    'B': 'bad'
}

for building_class, building_class_data in obs.groupby('BUILDING_CLASS'):
    observations = building_class_data[['WIND_SPEED', 'DAMAGE']].rename(
        columns={'WIND_SPEED': 'x', 'DAMAGE': 'y'}
    )
    observations.to_csv(f'observations_{rename[building_class]}.csv', index=False)

